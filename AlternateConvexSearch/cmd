# Theirs
./svm_motif_learn -c 150 -k 0 -m 1.3 --s 0000 data/train001_1.data motif.model motif # NOT SELF-PACED
./svm_motif_learn -c 150 -k 100 -m 1.3 --s 0000 data/train001_1.data motif.model motif # SELF-PACED

# Danny's
./svm_motif_learn -c 150 -k 0 -m 1.3 --s 0000 data/train001_1.data motif.model motif
./svm_motif_learn -c 150 -k 100 -m 1.3 -f 0.5 -v 0.5 --s 0000 data/train131_1.data motif.model motif

# Learning
./svm_motif_learn -c 150 -k 100 -m 1.3 -f 0.5 -v 0.5 --s 0000 ../small.data motif.model motif # Small data

# Inference
./svm_motif_classify ../small.data motif.model motif.testerror

# Opposite y
./svm_motif_learn -c 150 -k 0 -m 1.3 --t 1 --s 0000 data/train052_1.data motif.cccp.opp.model motif.cccp.opp # Small data
./svm_motif_learn -c 150 -k 100 -m 1.3 -f 0.55 --t 1 --s 0000 data/train052_1.data motif.slack.opp.model motif.slack.opp # Small data
./svm_motif_learn -c 150 -k 100 -m 1.3 -f 0.55 -u 1.0 --t 1 --s 0000 data/train052_1.data motif.unc.opp.model motif.unc.opp # Small data
./svm_motif_learn -c 150 -k 0 -m 1.3 --t 0 --s 0000 data/train052_1.data motif.cccp.mar.model motif.cccp.mar # Small data
./svm_motif_learn -c 150 -k 100 -m 1.3 -f 0.55 --t 0 --s 0000 data/train052_1.data motif.slack.mar.model motif.slack.mar # Small data
./svm_motif_learn -c 150 -k 100 -m 1.3 -f 0.55 -u 1.0 --t 0 --s 0000 data/train052_1.data motif.unc.mar.model motif.unc.mar # Small data

./svm_motif_learn -c 0 -a 150 -k 0 -o 2 -m 1.3 --t 1 --s 0000 test/small_test.data motif.cccp.sub.model motif.cccp.sub # Small data


# Train error
./svm_motif_classify data/train052_1.data motif.cccp.opp.model motif.cccp.opp.trainerror
./svm_motif_classify data/train052_1.data motif.slack.opp.model motif.slack.opp.trainerror
./svm_motif_classify data/train052_1.data motif.unc.opp.model motif.unc.opp.trainerror
./svm_motif_classify data/train052_1.data motif.cccp.mar.model motif.cccp.mar.trainerror
./svm_motif_classify data/train052_1.data motif.slack.mar.model motif.slack.mar.trainerror
./svm_motif_classify data/train052_1.data motif.unc.mar.model motif.unc.mar.trainerror

# Test error
./svm_motif_classify data/test052_1.data motif.cccp.opp.model motif.cccp.opp.testerror
./svm_motif_classify data/test052_1.data motif.slack.opp.model motif.slack.opp.testerror
./svm_motif_classify data/test052_1.data motif.unc.opp.model motif.unc.opp.testerror
./svm_motif_classify data/test052_1.data motif.cccp.mar.model motif.cccp.mar.testerror
./svm_motif_classify data/test052_1.data motif.slack.mar.model motif.slack.mar.testerror
./svm_motif_classify data/test052_1.data motif.unc.mar.model motif.unc.mar.testerror

# Expectation
./svm_motif_learn -c 150 -k 0 -m 1.3 --s 0000 data/train052_1.data motif.cccp.exp.model motif.cccp.exp # Small data
./svm_motif_learn -c 150 -k 100 -m 1.3 -f 0.55 --s 0000 data/train052_1.data motif.slack.exp.model motif.slack.exp # Small data
./svm_motif_learn -c 150 -k 100 -m 1.3 -f 0.55 -u 1.0 --s 0000 data/train052_1.data motif.unc.exp.model motif.unc.exp # Small data

# NOHUP
nohup [command] >> runs.out 2>&1 &

# Pipelining with a script:
-script submits a batch of learning jobs with specified params, and data sets, folds, random seeds. script puts everything from the same run in a single directory, with a file containing the run parameters, and description of the run
-then, run inference jobs; farm out an inference job to the same machine as a learning job. maybe use screen to persist the sessions? run inference on both the training and test datasets.
-third phase: gather all the result files (test error/train error will be in files with just one number, the error rate; objective value will be in .time files: objective, time for run)